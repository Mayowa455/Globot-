<!DOCTYPE html>

<html>

<head>

  <meta charset="utf-8">

  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">

  <!-- Meta tags for description and keywords -->

  <meta name="description" content="Nigeria telecommunication chatbot ">

  <meta name="keywords" content="chatbot">

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />

  <title>Telecom Chatbot</title>

 <link rel="stylesheet" href="app.css">

 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />

 

 <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script>

 

 <script src="https://cdnjs.cloudflare.com/ajax/libs/annyang/2.6.1/annyang.min.js"></script>

 <script type="text/javascript" src="https://unpkg.com/jso/dist/jso.js"></script>

 

 </script>

</head>

<body>

<style type="text/css">

// iOS Reset 

 .input {

 appearance: none;

 border-radius: 0;

 }

 

 .card {

 margin: 2rem auto;

 display: flex;

 flex-direction: column;

 width: 100%;

 max-width: 425px;

 background-color:green;

 border-radius: 10px;

 box-shadow: 0 10px 20px 0 rgba(#999, .25);

 padding: .75rem;

 color:white;

 }

 

 .card-image {

 border-radius: 8px;

 overflow: hidden;

 padding-bottom: 65%;

 background-image: url('https://assets.codepen.io/285131/coffee_1.jpg');

 background-repeat: no-repeat;

 background-size: 150%;

 background-position: 0 5%;

 position: relative;

 }

 

 .card-heading {

 

 color:green;

 }

 .card-form {

 padding: 2rem 1rem 0;

 

 }

 

 .input {

 display: flex;

 flex-direction: column-reverse;

 position: relative;

 padding-top: 1.5rem;

 &+.input {

 margin-top: 1.5rem;

 font-color:white;

 }

 }

 

 .input-label {

 color: #8597a3;

 position: absolute;

 top: 1.5rem;

 transition: .25s ease;

 }

 

 .input-field {

 

 border: 0;

 z-index: 1;

 background-color: transparent;

 border-bottom: 2px solid #eee; 

 font: inherit;

 font-size: 1.125rem;

 font-color:white;

 padding: .25rem 0;

 &:focus, &:valid {

 outline: 0;

 border-bottom-color: #6658d3;

 &+.input-label {

 font-color: white;

 transform: translateY(-1.5rem);

 }

 }

 }

 

 

 .card-info {

 padding: 1rem 1rem;

 text-align: center;

 font-size: .875rem;

 color: #8597a3;

 a {

 display: block;

 color: #6658d3;

 text-decoration: none;

 }

 }

 

 .action {

 margin-top: 2rem;

 }

 

 .action-button {

 font: inherit;

 font-size: 1.25rem;

 padding: 1em;

 width: 100%;

 font-weight: 500;

 background-color: green;

 border-radius: 6px;

 color: #FFF;

 border: 0;

 &:focus {

 outline: 0;

 }

 }

</style>

  <div id="app">

    <div id="header">

   <div id="menu-icon" class="menu-icon">

   <i class="fa fa-ellipsis-v"></i>

   </div>

      <img src="glo.jpeg" alt="Chatbot logo" id="logo">

      <h1>CUSTOMER SERVICE</h1>

      

    </div>

    <aside id="sidebar">

    <ul id="sidebar-list">

    <li id="network-type">

    <i class="fa fa-globe"></i>

    Network: <span id="network-type-text">Loading...</span>

    </li>

    <li id="customer-service">

    <i class="fa fa-comment"></i>

   Contact Customer Service

    </li>

    <li id="clear-history">

    <i class="fa fa-trash"></i>

    Clear Chat History

    </li>

    <li id="logout" >

    <i class="fa fa-sign-out-alt"></i>

   <a href="http://cloud-connect.atspace.cc/Globot.html" style="text-decoration: none;color:green;" > Back to Globot</a>

    </li>

    </ul>

    </aside>

    

    <form class="card-form" id="consultation-form">

    <div class="input">

    <input type="text" id="name" class="input-field" name="name" required/>

    <label for="name" class="input-label">Full name</label>

    </div>

    

    <div class="input">

    <input type="text" class="input-field" name="vlockn@gmail.com" required/>

    <label for="input-label" class="input-label">Email</label>

    </div>

    <div class="input">

    <input type="text" id="designation" class="input-field" name="designation">

    <label for="designation" class="input-label">Message:</label>

    </div>

    <div class="input">

    <input type="Date" id="date-time" name="date-time" class="input-field"><br>

    <input type="Time" id="date-time" name="date-time" class="input-field">

    

    <label for="date-time" class="input-label">Date and Time:</label>

    </div>

    

    <div class="action">

    <button class="action-button">send</button>

    </div>

    </form>

    

  </div>

  

  <script type="text/javascript">

  

  

 

  const networkTypeText = document.getElementById('network-type-text');

 

  // sidebar menu-icon

  const menuIcon = document.getElementById('menu-icon');

  const sidebar = document.getElementById('sidebar');

  //clear chat history

  const clearHistoryButton = document.getElementById('clear-history');

  const logoutButton = document.getElementById('logout');

  

  

  document.getElementById("consultation-form").addEventListener("submit", function(event){

  event.preventDefault(); // prevent form from submitting

  var confirmation = confirm("Thanks for using Glo service. your message is successfully sent.our custormer service will reply to you soon!");

  if (confirmation) {

  this.submit(); // submit form if user confirms

  }

  });

  

  clearHistoryButton.addEventListener('click', () => {

  // Clear chat history

  chats = [];

  saveChats();

  renderMessages();

  });

  

  logoutButton.addEventListener('click', () => {

  // Log out the user

  localStorage.removeItem('loggedIn');

  // Redirect to login page or show login form

  });

  

  

   

  menuIcon.addEventListener('click', () => {

  sidebar.classList.toggle('open');

  });

  

  //sidebar content

  

  

  function updateNetworkType() {

  // Check online/offline status

  const online = window.navigator.onLine;

  networkTypeText.textContent = online ? 'Online' : 'Offline';

  }

  

  updateNetworkType();

  window.addEventListener('online', updateNetworkType);

  window.addEventListener('offline', updateNetworkType);

  

  /*  clearHistoryButton.addEventListener('click', () => {

  // Clear chat history here

  });*/

  

  logoutButton.addEventListener('click', () => {

  // Log out the user here

  });

  

  

  

  

  

  

  

  

  </script>

  

</body>

</html>

